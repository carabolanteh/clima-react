{"version":3,"sources":["components/Header.jsx","components/Formulario.jsx","components/Clima.jsx","components/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handlerChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","App","component","consultar","setResultado","useEffect","a","url","fetch","respuesta","json","response","cod","consultarApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAuBeA,EApBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEb,OACI,8BACI,qBACIC,UAAU,kCADd,SAGI,mBACIC,KAAK,KACLD,UAAU,aAFd,SAGED,S,cCmEHG,EA7EI,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAAkB,EAGhCC,oBAAS,GAHuB,mBAGnDC,EAHmD,KAG5CC,EAH4C,KAMnDC,EAAgBN,EAAhBM,OAAQC,EAAQP,EAARO,KAITC,EAAgB,SAAAC,GAAC,OAEnBR,EAAY,2BACLD,GADI,kBAENS,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAgBlC,OACI,uBAAMC,SAbY,SAAAJ,GAClBA,EAAEK,iBAEmB,KAAlBR,EAAOS,QAAiC,KAAhBR,EAAKQ,QAIhCV,GAAS,GACTH,GAAa,IAJTG,GAAS,IASb,UACKD,GAAS,mBAAGP,UAAU,eAAb,iDACV,sBAAKA,UAAU,sBAAf,UACI,uBACImB,KAAK,OACLL,KAAK,SACLM,GAAG,SACHL,MAAON,EACPY,SAAUV,IAEd,uBAAOW,QAAQ,SAAf,wBAEJ,sBAAKtB,UAAU,sBAAf,UACI,yBACIc,KAAK,OACLM,GAAG,OACHL,MAAOL,EACPW,SAAUV,EAJd,UAMI,wBAAQI,MAAM,GAAd,uCACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,wBAEJ,qBAAKf,UAAU,sBAAf,SACI,uBACImB,KAAK,SACLJ,MAAM,eACNf,UAAU,0EC7BnBuB,EAlCD,SAAC,GAA6B,IAAD,IAA3BC,UAAWV,EAAgB,EAAhBA,KAAMW,EAAU,EAAVA,KAE7B,IAAKX,EAAM,OAAO,KAClB,IAAMY,EAAQ,OAGd,OACI,qBAAK1B,UAAU,2BAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8CAAiBc,EAAjB,UACA,oBAAGd,UAAU,cAAb,UACK2B,WAAWF,EAAKG,KAAOF,EAAQ,IAAIG,QAAQ,GAC5C,6CAEJ,0CAEKF,WAAWF,EAAKK,SAAWJ,EAAQ,IAAIG,QAAQ,GAChD,6CAEJ,0CAEKF,WAAWF,EAAKM,SAAWL,EAAQ,IAAIG,QAAQ,GAChD,mDCZLG,EAXD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,mBAAGjC,UAAU,qBAAb,SAAmCiC,KC+E5BC,MA3Ef,WAAe,IAkCTC,EAlCS,EAEmB7B,mBAAS,CACvCG,OAAQ,GACRC,KAAM,KAJK,mBAENP,EAFM,KAEIC,EAFJ,OAOqBE,oBAAS,GAP9B,mBAON8B,EAPM,KAOK/B,EAPL,OAQqBC,mBAAS,IAR9B,mBAQNkB,EARM,KAQKa,EARL,OASa/B,oBAAS,GATtB,mBASNC,EATM,KASCC,EATD,KAWNC,EAAgBN,EAAhBM,OAAQC,EAAQP,EAARO,KA+BjB,OA7BE4B,qBAAU,YACU,uCAAG,gCAAAC,EAAA,0DAEhBH,EAFgB,uBAGJ,mCACPI,EAJW,4DAIgD/B,EAJhD,YAI0DC,EAJ1D,kBAGJ,oCAHI,SAKO+B,MAAMD,GALb,cAKXE,EALW,gBAMMA,EAAUC,OANhB,OAMXC,EANW,OAOjBP,EAAaO,GACS,QAAlBpB,EAAUqB,IACZrC,GAAS,GAETA,GAAS,GAXM,4CAAH,qDAelBsC,GACAzC,GAAa,KACZ,CAAC+B,IAMFD,EADC5B,EACW,cAAC,EAAD,CAAO0B,QAAQ,sBAEf,cAAC,EAAD,CAAOT,UAAWA,IAIhC,gCACE,cAAC,EAAD,CACEzB,OAAO,oBAET,qBACEC,UAAU,kBADZ,SAGE,qBACEA,UAAU,YADZ,SAGE,sBAAKA,UAAU,MAAf,UACE,qBACEA,UAAU,aADZ,SAGE,cAAC,EAAD,CACEG,SAAUA,EACVC,YAAaA,EACbC,aAAcA,MAGlB,qBACEL,UAAU,aADZ,SAGGmC,eC9DEY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d4c669d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\n\r\nconst Header = ({titulo}) => {\r\n    //const titulo =\r\n    return(\r\n        <nav>\r\n            <div\r\n                className=\"nav-wrapper light-blue darken-2\"\r\n            >\r\n                <a \r\n                    href=\"!#\"\r\n                    className=\"brand-logo\"\r\n                >{titulo}</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst Formulario = ({busqueda, setBusqueda, setConsultar}) => {\r\n\r\n    \r\n    const [error, setError] = useState(false);\r\n\r\n    // Destructuring del estado\r\n    const {ciudad, pais} = busqueda;\r\n\r\n    // Función que actualiza el estado\r\n\r\n    const handlerChange = e => \r\n        // actualizar el estado\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    \r\n    // Validación\r\n    const handlerSubmit = e => {\r\n        e.preventDefault();\r\n        //Validar\r\n        if(ciudad.trim() === '' || pais.trim() === ''){\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        setConsultar(true)\r\n    }\r\n    //\r\n\r\n    return(\r\n        <form onSubmit={handlerSubmit}>\r\n            {error && <p className=\"red darken-4\"> Todos los campos son obligatorios </p> }\r\n            <div className=\"input-field col s12\">\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"ciudad\" \r\n                    id=\"ciudad\" \r\n                    value={ciudad}\r\n                    onChange={handlerChange}\r\n                />\r\n                <label htmlFor=\"ciudad\">Ciudad:</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n                <select \r\n                    name=\"pais\" \r\n                    id=\"pais\"\r\n                    value={pais}\r\n                    onChange={handlerChange}\r\n                >\r\n                    <option value=\"\">-- Seleccionar país --</option>\r\n                    <option value=\"US\">Estados Unidos</option>\r\n                    <option value=\"MX\">México</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"ES\">España</option>\r\n                    <option value=\"PE\">Perú</option>\r\n                </select>\r\n                <div className=\"input-field col s12\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"Buscar Clima\"\r\n                        className=\"waves-effect waves-light btn-large btn-block yellow accent-4\" \r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    busqueda: PropTypes.object.isRequired,\r\n    setBusqueda: PropTypes.func.isRequired,\r\n    setConsultar: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import PropTypes from \"prop-types\";\r\n\r\n\r\nconst Clima = ({resultado:{name, main}}) =>{\r\n\r\n    if (!name) return null;\r\n    const kelvin= 273.15;\r\n\r\n\r\n    return(\r\n        <div className=\"card-panel white col s12\">\r\n            <div className=\"black-text\">\r\n                <h2>El clima de {name} es:</h2>\r\n                <p className=\"temperatura\">\r\n                    {parseFloat(main.temp - kelvin, 10).toFixed(2)}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n                <p>\r\n                    Máxima\r\n                    {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n                <p>\r\n                    Mínima\r\n                    {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import PropTypes from \"prop-types\";\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <p className=\"red darken-4 error\">{mensaje}</p>\r\n    );\r\n};\r\n\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Error;","import { useState } from 'react';\nimport { useEffect} from 'react';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport Clima from './components/Clima'\nimport Error from './components/Error'\n\n\nfunction App() {\n// declarando nuestro estado inicial\n  const [busqueda, setBusqueda] = useState({\n    ciudad: '',\n    pais: ''\n  });\n\n  const [consultar, setConsultar] = useState(false);\n  const [resultado, setResultado] = useState({})\n  const [error, setError] = useState(false)\n\n  const {ciudad, pais} = busqueda;\n\n  useEffect(()=>{\n    const consultarApi = async () => {\n      // validar si hay datos, detiene el default de useEffect que actualiza al principio\n      if(consultar){\n        const appId= '3deae13d16e64622710a7386c916cd26';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n        const respuesta = await fetch(url);\n        const response = await respuesta.json();\n        setResultado(response);\n        if (resultado.cod === '404') {\n          setError(true)\n        } else {\n          setError(false)\n        }\n      }\n    }\n    consultarApi();\n    setConsultar(false);\n  }, [consultar])\n\n\n  let component;\n\n  if(error){\n    component = <Error mensaje=\"No hay resultados\"/>\n  } else{\n    component = <Clima resultado={resultado}/>\n  }\n\nreturn (\n  <div>\n    <Header\n      titulo='Clima React App'\n    />\n    <div\n      className=\"contenedor-form\"\n    >\n      <div\n        className=\"container\"\n      >\n        <div className=\"row\">\n          <div\n            className=\"col m6 s12\"\n          >\n            <Formulario\n              busqueda={busqueda}\n              setBusqueda={setBusqueda}\n              setConsultar={setConsultar}\n            />\n          </div>\n          <div\n            className=\"col m6 s12\"\n          >\n            {component}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}